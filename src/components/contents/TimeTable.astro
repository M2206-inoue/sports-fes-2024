---
import SubTitle from "../SubTitle.astro";
import TimeTableD1 from "../TimeTableD1.astro";
import TimeTableD2 from "../TimeTableD2.astro";
import { Icon } from 'astro-iconify'
---

<div class="timeTable" id="contents-timeTable">
  <SubTitle title="タイムテーブル" />
  <div class="tab-wrap">
    <input id="TAB-01" type="radio" name="TAB" class="tab-switch" checked="checked" /><label class="tab-label text-16" for="TAB-01">1日目</label>
      <div class="tab-content">
  <TimeTableD1 />
      </div>
    <input id="TAB-02" type="radio" name="TAB" class="tab-switch" /><label class="tab-label text-16" for="TAB-02">2日目</label>
      <div class="tab-content">
  <TimeTableD2 />
      </div>
</div>

<div class="game">
	<SubTitle title="トーナメント" subTitle="!結果は下部メニュー🏆参照!" />
	<div class="matches">


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/basketball-match.png">
			   <Icon name="fa6-solid:basketball" class="sportIcon" />
			   <p class="text-12 sportName">バスケットボール</p>
			</button>
		</div>
		

		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/tabletennis-match.png">
			   <Icon name="fa-solid:table-tennis" class="sportIcon" />
			   <p class="text-12 sportName">卓球</p>
			</button>
		</div>


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/tennis-match.png">
			   <Icon name="cil:tennis" class="sportIcon" />
			   <p class="text-12 sportName">硬式テニス</p>
			</button>
		</div>


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/softball-match.png">
			   <Icon name="fa6-solid:baseball-bat-ball" class="sportIcon" />
			   <p class="text-12 sportName">ソフトボール</p>
			</button>
		</div>


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/soccer-match.png">
			   <Icon name="fluent:sport-soccer-24-filled" class="sportIcon" />
			   <p class="text-12 sportName">サッカー</p>
			</button>
		</div>


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/badminton-match.png">
			   <Icon name="icon-park-outline:badminton" class="sportIcon" />
			   <p class="text-12 sportName">バドミントン</p>
			</button>
		</div>


		<div class="matchitem" >
			<button class="matchbutton" data-image="/match-png/volley-match.png">
			   <Icon name="fa-solid:volleyball-ball" class="sportIcon" />
			   <p class="text-12 sportName">バレーボール</p>
			</button>
		</div>


		<div id="modal" class="modal">
			<div class="modal-content">
			  <div id="closeModal" class="close"><p>×とじる</p></div>
			  <img id="modalImage" src="" alt="モーダル画像">
			</div>
		  </div>
		


	</div>


</div>

<style>
/*トーナメントの表示*/
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
  position: absolute;
  left:50%;
  top:50%;
  transform: translateX(-50%) translateY(-50%);
  
  width: 100%;
  height:60%;
  max-width: 600px;
  background-color: white;
  text-align: center;
}

@media screen and (max-width: 599px) {
	.modal-content {
  position: absolute;
  left:50%;
  top:50%;
  transform: translateX(-50%) translateY(-50%);
  width: 100%;
  height:30%;
  background-color: white;
  text-align: center;
  }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
	.modal-content {
  position: absolute;
  left:50%;
  top:50%;
  transform: translateX(-50%) translateY(-50%);
  width: 120%;
  height:40%;
  background-color: white;
  text-align: center;
  }
}

#modalImage {
  max-width: 100%; /* モーダルの幅に合わせて表示 */
  max-height: 100%; /* モーダルの高さに合わせて表示 */
}

.close {
  position: absolute;
  top: 80%;
  left:50%;
  transform: translateX(-50%) ;
  font-size: 20px;
  font-weight: 400;
  cursor: pointer;
  width:80px;
  border-radius:0.4em;
  padding: 10px 15px;
  background-color: #b90130;
  color:#ffffff;
  text-align: center; 
}

@media screen and (max-width: 1025px) {
	.close {
  position: absolute;
  top: 90%;
  left:50%;
  transform: translateX(-50%) ;
  font-size: 20px;
  font-weight: 400;
  cursor: pointer;
  width:80px;
  border-radius:0.4em;
  padding: 10px 15px;
  background-color: #b90130;
  color:#ffffff;
  text-align: center; 
}
}

.close p{
	text-align: center; 
}


/*タイムテーブル*/
  .timeTable{
	margin-top:30px;
  }

  .tab-wrap {
	background: White;
	box-shadow: 0 0 5px rgba(0,0,0,.1);
	display: flex;
	flex-wrap: wrap;
	overflow: hidden;
	padding: 0 0 20px;
}

.tab-label {
	color: Gray;
	cursor: pointer;
	flex: 1;
	font-weight: bold;
	order: -1;
	padding: 12px 24px;
	position: relative;
	text-align: center;
	transition: cubic-bezier(0.4, 0, 0.2, 1) .2s;
	user-select: none;
	white-space: nowrap;
	-webkit-tap-highlight-color: transparent;
}

.tab-label:hover {
	background: rgba(0, 191, 255,.1);
}

.tab-switch:checked + .tab-label {
	color: #315daa;
}

.tab-label::after {
	background: #315daa;
	bottom: 0;
	content: '';
	display: block;
	height: 3px;
	left: 0;
	opacity: 0;
	pointer-events: none;
	position: absolute;
	transform: translateX(100%);
	transition: cubic-bezier(0.4, 0, 0.2, 1) .2s 80ms;
	width: 100%;
	z-index: 1;
}

.tab-switch:checked ~ .tab-label::after {
	transform: translateX(-100%);
}

.tab-switch:checked + .tab-label::after {
	opacity: 1;
	transform: translateX(0);
}

.tab-content {
	height:0;
	opacity:0;
	padding: 0 20px;
	pointer-events:none;
	transform: translateX(-30%);
	transition: transform .3s 80ms, opacity .3s 80ms;
	width: 100%;
}

.tab-switch:checked ~ .tab-content {
	transform: translateX(30%);
}

.tab-switch:checked + .tab-label + .tab-content {
	height: auto;
	opacity: 1;
	order: 1;
	pointer-events:auto;
	transform: translateX(0);
}

.tab-wrap::after {
	content: '';
	height: 20px;
	order: -1;
	width: 100%;
}

.tab-switch {
	display: none;
}

/*以下、試合番号の告知*/ 
.game{
	margin-top:30px;
	margin-bottom:30px;
}

.matches {
        width: 100%;
        display: grid;
        grid-gap: 14px;
       
    }
    @media screen and (max-width: 300px) {
        .matches {
            grid-template-columns: 1fr;
        }
    }
    @media screen and (min-width: 301px) and (max-width: 430px) {
        .matches {
            grid-template-columns: 1fr 1fr;
        }
    }

    @media screen and (min-width: 431px) and (max-width: 600px) {
        .matches {
            grid-template-columns: 1fr 1fr 1fr;
        }
    }

    @media screen and (min-width: 601px) {
        .matches {
            grid-template-columns: 1fr 1fr 1fr 1fr;
        }
    }

	.sportIcon {
        width: 36px;
        height: 36px;
        color: #315daa;
    }
    .sportName {
        color: #315daa;
		font-weight: 700;
    }

	.matchitem {
        width: 100%;
        min-width: 128px;
        height: 128px;
        border-radius: 15px;
        
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        row-gap: 6px;
        text-decoration: none;
        background-color: #ffffff;
    }

	.matchbutton {
        width: 100%;
        height: 100%;
        border-radius: 15px;
        border: none;
        background-color: transparent;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        row-gap: 6px;
        text-decoration: none;
        cursor:pointer;
    }
</style>

<script>
// 要素を取得
const modal = document.getElementById('modal');
const modalImage = document.getElementById('modalImage');
const closeModal = document.getElementById('closeModal');
const openModalButtons = document.querySelectorAll('.matchbutton');

// 各ボタンにクリックイベントを設定
openModalButtons.forEach(button => {
  button.onclick = function() {
    // data-image 属性から画像パスを取得し、モーダルに表示
    const imagePath = button.getAttribute('data-image');
    modalImage.src = imagePath;
    modal.style.display = 'block';
  };
});

// 閉じるボタンでモーダルを非表示
closeModal.onclick = function() {
  modal.style.display = 'none';
};

// モーダルの外側をクリックでモーダルを非表示
window.onclick = function(event) {
  if (event.target === modal) {
    modal.style.display = 'none';
  }
};
</script>